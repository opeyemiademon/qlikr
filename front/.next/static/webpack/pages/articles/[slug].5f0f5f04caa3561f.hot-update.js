"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/articles/[slug]",{

/***/ "./src/components/globalFunction.tsx":
/*!*******************************************!*\
  !*** ./src/components/globalFunction.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"abbreviate\": function() { return /* binding */ abbreviate; },\n/* harmony export */   \"convertDateTime\": function() { return /* binding */ convertDateTime; },\n/* harmony export */   \"getBritishDate\": function() { return /* binding */ getBritishDate; },\n/* harmony export */   \"getDateDifference\": function() { return /* binding */ getDateDifference; },\n/* harmony export */   \"getDateTime\": function() { return /* binding */ getDateTime; },\n/* harmony export */   \"getDays\": function() { return /* binding */ getDays; },\n/* harmony export */   \"getRank\": function() { return /* binding */ getRank; },\n/* harmony export */   \"getTime\": function() { return /* binding */ getTime; },\n/* harmony export */   \"htmlEntities\": function() { return /* binding */ htmlEntities; },\n/* harmony export */   \"shortText\": function() { return /* binding */ shortText; },\n/* harmony export */   \"timeSince\": function() { return /* binding */ timeSince; }\n/* harmony export */ });\nvar config = {\n    headers: {\n        \"content-type\": \"application/json\"\n    }\n};\nvar getDateTime = function() {\n    var date = new Date();\n    var day = date.getDate();\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n    var today = year + \"-\" + month + \"-\" + day;\n    return (today + \" \" + new Date().toLocaleTimeString()).slice(0, 19);\n};\nvar timeSince = function(date) {\n    var tdate = new Date();\n    var seconds = Math.floor((tdate - date) / 1000);\n    var interval = seconds / 31536000;\n    if (interval > 1) {\n        // return date.toISOString().slice(0,10)\n        return Math.floor(interval) + \" years ago\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n        //return date.toISOString().slice(0,10)\n        return Math.floor(interval) + \" months ago\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n        //return date.toISOString().slice(0,10)\n        return Math.floor(interval) + \" days ago\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n        return Math.floor(interval) + \" hours ago\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n        return Math.floor(interval) + \" minutes ago\";\n    }\n    return Math.floor(seconds) + \" seconds ago\";\n};\nfunction htmlEntities(str) {\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\");\n}\nvar abbreviate = function(n, d) {\n    var x = (\"\" + n).length, p = Math.pow, d = p(10, d);\n    x -= x % 3;\n    return Math.round(n * d / p(10, x)) / d + \" kMGTPE\"[x / 3];\n};\nvar getTime = function(value) {\n    var timeString = String(value);\n    var hourEnd = timeString.indexOf(\":\");\n    var H = Number(timeString.substr(0, 2));\n    var h = Number(H) % 12 || 12;\n    var ampm = Number(H) < 12 || Number(H) === 24 ? \"AM\" : \"PM\";\n    if (h < 10) h = \"0\" + h;\n    var result = h + timeString.substr(hourEnd, 3) + \" \" + ampm;\n    return result;\n};\nvar convertDateTime = function(date) {\n    var result = \"\";\n    if (date !== \"0000-00-00 00:00:00\") {\n        result = new Date(date).toISOString().slice(0, 19);\n    } else {\n        result = \"\";\n    }\n    return result;\n};\nvar getBritishDate = function(dateString) {\n    var months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n    ];\n    var splitDate = dateString.split(\"-\");\n    var month = Number(splitDate[1]) - 1; //Javascript months are 0-11\n    var surfix = getRank(splitDate[2]).toLowerCase();\n    var newDate = parseInt(splitDate[2]) + surfix + \" \" + months[month] + \", \" + splitDate[0];\n    return newDate;\n};\nvar getRank = function(i) {\n    var j = i % 10, k = i % 100;\n    if (j == 1 && k != 11) {\n        return \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return \"rd\";\n    }\n    return \"th\";\n};\nvar shortText = function shortText(text, limit) {\n    if (text.length > limit) {\n        for(var i = limit; i > 0; i--){\n            if (text.charAt(i) === \" \" && (text.charAt(i - 1) !== \",\" || text.charAt(i - 1) !== \".\" || text.charAt(i - 1) !== \";\")) {\n                return text.substring(0, i) + \"...\";\n            }\n        }\n        return text.substring(0, limit) + \"...\";\n    } else return text;\n};\nvar getDateDifference = function(from) {\n    var fromDate = new Date(from);\n    var toDate = new Date();\n    var diff_time = toDate.getTime() - fromDate.getTime();\n    var differ = diff_time / (1000 * 3600 * 24);\n    return Number(differ);\n};\nvar getDays = function(date) {\n    var day;\n    switch(new Date(date).getDay()){\n        case 0:\n            day = \"Sunday\";\n            break;\n        case 1:\n            day = \"Monday\";\n            break;\n        case 2:\n            day = \"Tuesday\";\n            break;\n        case 3:\n            day = \"Wednessday\";\n            break;\n        case 4:\n            day = \"Thursday\";\n            break;\n        case 5:\n            day = \"Friday\";\n            break;\n        case 6:\n            day = \"Saturday\";\n            break;\n        default:\n            day = \"Sunday\";\n    }\n    return day;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/globalFunction.tsx\n"));

/***/ })

});